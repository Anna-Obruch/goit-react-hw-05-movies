{"version":3,"file":"static/js/945.654d9b5a.chunk.js","mappings":"qRAEaA,EAAaC,EAAAA,EAAAA,GAAH,+HAQVC,EAAWD,EAAAA,EAAAA,GAAH,8T,SCiCrB,EArCa,WACT,IAAOE,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAaP,GAFtB,OAEJG,EAFI,OAGVC,EAAQD,GAHE,gDAMVK,QAAQC,IAAR,MANU,yDAAH,qDAUfH,GACH,GAAE,CAACN,KAGA,+BACA,SAACH,EAAD,UACKM,EAAKO,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,cAAeC,EAAnC,EAAmCA,UAAnC,OACN,UAACf,EAAD,YACI,gBAAKgB,IAAG,UAAKH,EAAcI,EAAAA,EAAiBJ,EAAcK,EAAAA,EAAc,SAAWJ,GAAiBK,IAAML,KAC1G,0BACI,sCADJ,IAC0BA,MAE1B,0BACI,yCADJ,IAC6BC,OANlBH,EADT,OAerB,C,+LCzCDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACtBE,EADsB,EACtBA,KADsB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BAAmCC,EAAnC,kBAAoDK,EAApD,+CADM,uBACpBH,EADoB,EACpBA,KADoB,kBAEpBA,EAAKC,SAFe,2CAAH,sDAKfG,EAAY,mCAAG,WAAM1B,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,gBAAoBnB,EAApB,oBAAuCoB,EAAvC,oBADG,uBACjBE,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAIZf,EAAY,mCAAG,WAAMP,GAAN,yFACDmB,EAAAA,EAAAA,IAAA,gBACVnB,EADU,4BACiBoB,EADjB,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAKfA,EAAKnB,MALU,2CAAH,sDAOZwB,EAAe,mCAAG,WAAM3B,GAAN,yFACJmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,oBADI,uBACnBE,EADmB,EACnBA,KADmB,kBAKpBA,EAAKC,SALe,2CAAH,qD,6ECzBrB,IAAMP,EAAkB,mCAClBC,EAAc,qC","sources":["components/Cast/Cast.module.jsx","components/Cast/Cast.jsx","services/getMovies.js","utils/constants.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  list-style-type: none;\n  \n`;\nexport const ListItem = styled.li`\n  min-width: 182px;\n  font-size: 16px;\n  padding: 6px;\n  max-width: min-content;\n  background-color: #cba8e3;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  img {\n    max-width: 182px;\n    border-radius: 8px;\n  }\n  span {\n    color: #260b38;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {getCastMovie} from 'services/getMovies';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\nimport { ListItem, StyledList } from './Cast.module';\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [cast, setCast] = useState([])\n\n    useEffect(()=>{\n        const fetchCast = async ()=> {\n            try{\n                const cast = await getCastMovie(movieId);\n                setCast(cast);\n            }\n            catch (e) {\n                console.log(e)\n\n            }\n        }; \n        fetchCast();\n    }, [movieId]); \n    \n    return (\n        <>\n        <StyledList>\n            {cast.map(({id, profile_path, original_name, character})=> (\n                <ListItem key={id}>\n                    <img src={`${profile_path? BASE_POSTER_URL+ profile_path: PLACEHOLDER + '?text=' + original_name}`} alt ={original_name}/>\n                    <p>\n                        <span> Actor:</span> {original_name}\n                    </p>\n                    <p>\n                        <span>Character:</span> {character}\n                    </p>\n                </ListItem>\n            ))}\n        </StyledList>\n        \n        </>\n    );\n};\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () =>{\n    const {data} = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n    const {data} = await axios.get (`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data.results;\n};\n\nexport const getMovieById = async movieId => {\n    const {data} = await axios.get (`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return data\n};\nexport const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      );\n    \n      return data.cast;  \n};\nexport const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';"],"names":["StyledList","styled","ListItem","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","getCastMovie","console","log","map","id","profile_path","original_name","character","src","BASE_POSTER_URL","PLACEHOLDER","alt","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getMovieById","getReviewsMovie"],"sourceRoot":""}