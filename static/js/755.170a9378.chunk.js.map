{"version":3,"file":"static/js/755.170a9378.chunk.js","mappings":"iNAEaA,EAAYC,EAAAA,EAAAA,GAAH,uEAITC,EAAYD,EAAAA,EAAAA,GAAH,2V,SCYtB,EAfkB,SAAC,GAAc,IAAbE,EAAY,EAAZA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACL,EAAD,WACGG,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,eAAL,OACR,SAACN,EAAD,WACI,SAAC,KAAD,CAAMO,MAAQ,CAACC,KAAMN,GAAWO,GAAE,kBAAcJ,GAAhD,SACKC,KAFOD,EADR,IADd,MAWD,C,2JCfYK,EAAcX,EAAAA,EAAAA,MAAH,yQAoBXY,EAAeZ,EAAAA,EAAAA,OAAH,6T,SCOzB,EA1Ba,SAAC,GAAuB,IAAtBa,EAAqB,EAArBA,gBACX,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACI,kBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAELN,EAAgB,CAACE,MAAAA,GACjB,EAOG,WACI,SAACJ,EAAD,CAAaS,KAAK,OAClBC,YAAY,aACZC,WAAS,EACTC,MAAOR,EACPS,SAVmB,SAAC,GAAwB,IAAbD,EAAY,EAArBE,OAASF,MACnCP,EAASO,EACZ,KASO,SAACX,EAAD,CAAcQ,KAAK,SAASM,UAAWX,EAAvC,sBAKX,E,SCMD,EA3Be,WACb,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBhB,EAArB,KAiBA,OAfAiB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAiB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBH,GAFrB,OAEhBI,EAFgB,OAGtBR,EAAUQ,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBJ,GAVyB,CAW1B,GAAE,CAACJ,KAGF,iCACE,SAAC,EAAD,CAAMhB,gBAAiBA,IACtBX,EAAOoC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWrC,OAAQA,MAG9C,C,+LC/BDsC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACtBE,EADsB,EACtBA,KADsB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBV,EAAe,mCAAG,WAAMnB,GAAN,yFACNyB,EAAAA,EAAAA,IAAA,+BAAmCC,EAAnC,kBAAoD1B,EAApD,+CADM,uBACpB4B,EADoB,EACpBA,KADoB,kBAEpBA,EAAKC,SAFe,2CAAH,sDAKfC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBAAoBM,EAApB,oBAAuCL,EAAvC,oBADG,uBACjBE,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAIZI,EAAY,mCAAG,WAAMD,GAAN,yFACDN,EAAAA,EAAAA,IAAA,gBACVM,EADU,4BACiBL,EADjB,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAKfA,EAAKK,MALU,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACJN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADI,uBACnBE,EADmB,EACnBA,KADmB,kBAKpBA,EAAKC,SALe,2CAAH,qD","sources":["components/FilmsList/FilmsList.module.jsx","components/FilmsList/FilmsList.jsx","components/Form/Form.module.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListFilms = styled.ul`\n  margin-top: 12px;\n  list-style-type: none;\n`;\nexport const ItemFilms = styled.li`\n  font-weight: 400;\n  font-size: 16px;\n\n  background-color: #bf9fe3;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n    background-color: #da73de;\n    color: #111111;\n    border-radius: 14px;\n  }\n\n  a {\n    display: block;\n    padding: 14px 14px;\n  }\n`;","import { useLocation, Link } from \"react-router-dom\";\nimport { ListFilms, ItemFilms } from './FilmsList.module';\n\nconst FilmsList = ({movies}) => {\nconst location = useLocation();\nreturn (\n  <ListFilms>\n    {movies.map(({id,original_title}) => (\n        <ItemFilms key={id}>\n            <Link state ={{from: location}} to ={`/movies/${id}`}>\n                {original_title}\n            </Link>\n        </ItemFilms>\n    ))};\n  </ListFilms>  \n);\n\n};\nexport default FilmsList;","import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: \n  #366891;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: white;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  margin-left: 12px;\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: \n  #366891;\n  border-radius: 10px;\n\n  :not(:disabled):active,\n  :focus,\n  :not(:disabled):hover {\n    color: white;\n  }\n`;","import { useState } from \"react\";\nimport { InputSearch, ButtonSearch } from './Form.module';\n\nconst Form = ({setSearchParams} )=> {\n    const [query, setQuery] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n     setSearchParams({query}); \n    };\n\n    const handleSearchParams = ({ target: {value}}) => {\n        setQuery(value);\n    };\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <InputSearch type=\"text\"\n            placeholder=\"Name movie\"\n            autoFocus\n            value={query}\n            onChange={handleSearchParams}/>\n            <ButtonSearch type=\"submit\" disabled={!query}>\n                Search\n                </ButtonSearch>\n        </form>\n    );\n};\nexport default Form;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/getMovies';\n\nimport Form from 'components/Form/Form';\nimport FilmsList from 'components/FilmsList/FilmsList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () =>{\n    const {data} = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n    const {data} = await axios.get (`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data.results;\n};\n\nexport const getMovieById = async movieId => {\n    const {data} = await axios.get (`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return data\n};\nexport const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      );\n    \n      return data.cast;  \n};\nexport const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };"],"names":["ListFilms","styled","ItemFilms","movies","location","useLocation","map","id","original_title","state","from","to","InputSearch","ButtonSearch","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","getMovieByQuery","movieByQuery","console","log","length","FilmsList","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}