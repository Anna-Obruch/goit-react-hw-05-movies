{"version":3,"file":"static/js/387.74253a94.chunk.js","mappings":"8QAEaA,EAAaC,EAAAA,EAAAA,GAAH,6CAGVC,EAAWD,EAAAA,EAAAA,GAAH,iNAcRE,EAAeF,EAAAA,EAAAA,EAAH,+D,SCgBzB,EA7BgB,SAAVG,IACF,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAgBP,GAFtB,OAEVD,EAFU,OAGjBK,EAAWL,GAHM,gDAKbS,QAAQC,IAAR,MALa,yDAAH,qDAOdH,GACH,GAAE,CAACN,IACkB,IAAnBD,EAAQW,QACX,yCAEA,SAACf,EAAD,UACKQ,EAAQQ,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACT,UAACjB,EAAD,YACA,0BACJ,sCADI,IACkBgB,MAExB,SAACf,EAAD,UAAegB,MAJMF,EADN,KAUxB,C,+LCjCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACtBE,EADsB,EACtBA,KADsB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BAAmCC,EAAnC,kBAAoDK,EAApD,+CADM,uBACpBH,EADoB,EACpBA,KADoB,kBAEpBA,EAAKC,SAFe,2CAAH,sDAKfG,EAAY,mCAAG,WAAMtB,GAAN,yFACHe,EAAAA,EAAAA,IAAA,gBAAoBf,EAApB,oBAAuCgB,EAAvC,oBADG,uBACjBE,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAIZK,EAAY,mCAAG,WAAMvB,GAAN,yFACDe,EAAAA,EAAAA,IAAA,gBACVf,EADU,4BACiBgB,EADjB,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAKfA,EAAKM,MALU,2CAAH,sDAOZjB,EAAe,mCAAG,WAAMP,GAAN,yFACJe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADI,uBACnBE,EADmB,EACnBA,KADmB,kBAKpBA,EAAKC,SALe,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n`;\nexport const ListItem = styled.li`\n  font-size: 14px;\n  padding: 6px;\n  background-color: #2a2a2a;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  span {\n    color: #ffc700;\n  }\n`;\nexport const ReviewsDescr = styled.p`\n  color: #888888;\n  margin-top: 6px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovie } from 'services/getMovies';\nimport { ListItem, StyledList, ReviewsDescr } from './Reviews.styled';\n\n\nconst Reviews = ()=> {\n    const {movieId} = useParams()\n    const [reviews, setReviews] = useState([])\n\n    useEffect(() =>{\n        const fetchReviews = async () => {\n            try \n            {const Reviews = await getReviewsMovie(movieId);\n            setReviews(Reviews);}\n            catch (e){\n                console.log(e)\n            }};\n            fetchReviews();   \n        }, [movieId]);\n    return Reviews.length === 0 ? (\n        <h3>No reviews.</h3>\n    ) : (\n        <StyledList>\n          {  reviews.map(({id, author, content}) => (\n                <ListItem key={id}>\n                <p>\n            <span>Author:</span> {author}\n          </p>\n          <ReviewsDescr>{content}</ReviewsDescr>   \n                </ListItem>\n            ))}\n        </StyledList>\n    );\n};\nexport default Reviews;","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () =>{\n    const {data} = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n    const {data} = await axios.get (`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data.results;\n};\n\nexport const getMovieById = async movieId => {\n    const {data} = await axios.get (`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return data\n};\nexport const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      );\n    \n      return data.cast;  \n};\nexport const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };"],"names":["StyledList","styled","ListItem","ReviewsDescr","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getReviewsMovie","console","log","length","map","id","author","content","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getMovieById","getCastMovie","cast"],"sourceRoot":""}